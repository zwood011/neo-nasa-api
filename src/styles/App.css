:root {
    --background-grey: rgba(65, 68, 77, 0.556);
    --black-low-opacity: rgba(255, 255, 255, 0.196);
    --gradient-dark: linear-gradient(rgba(60, 62, 70, 0.832), var(--background-grey));
}

* {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
    margin: 0;
}

body {
    background: linear-gradient(135deg, rgb(231, 220, 249), rgb(210, 232, 243), rgb(193, 216, 252), rgb(233, 223, 248));

    background-attachment: fixed;
}

.app-header {
    display: flex;
    padding: 1rem;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    animation: slide-in 0.5s;
}

.app-nav-item {
    margin: 1rem;
}

.App {
    align-items: center;
    color: black;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.Filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    color: rgb(77, 77, 77);
    width: 100%;
    align-items: center;
    border-radius: 8px;
}

.Filter-Input {
    border-radius: 8px;
    border: none;
    width: auto;
    background: rgba(255, 255, 255, 0.656);
}

.Filter-Input:active {
    border: transparent;
}

.Page-Description {
    border-radius: 8px;
    cursor: auto;
}

.Hyperlink {
    text-decoration: none;
    color: rgb(93, 110, 135);
}

.Hyperlink:hover {
    color: rgb(150, 167, 206);
}

.Error-Container {
    width: calc(100% - 2rem); /* Adjust width to leave 1rem margin on each side */
    height: auto;
    padding: 1rem;
    background-color: rgba(255, 0, 0, 0.19);
    color: black;
    flex-direction: column;
    row-gap: 1rem;
    display: flex;
    align-items: center;
    max-width: 1200px;
    justify-content: center;
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);
    border-radius: 8px;
    margin: 0 auto; /* Center the container */
}

.Button-Load {
    border: none;
    background: transparent;
    border-radius: 5px;
    color: rgb(77, 77, 77);
    margin-top: 1.5rem;
    align-content: center;
    border: 2px solid rgba(0, 0, 0, 0.266);
    font-size: 1rem;
    padding: 1rem;
    width: 10rem;
}

.Button-Load:hover {
    background: rgba(255, 255, 255, 0.114);
}

.header-button {
    font-size: calc(8px + 2vmin);
}

.header-button:hover {
    color: rgb(89, 89, 89);
}

.Card-Holder {
    align-items: flex-start; /* Added to prevent cards from stretching */
    display: grid;
    margin: 1rem;
    padding: 1rem;
    grid-template-columns: repeat(3, 1fr); /* Increase number of columns for better layout */
    justify-content: center;
    gap: 4rem;
}

.Card-Name {
    display: block;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}
@keyframes pop-in {
    0% {
        transform: translateY(100%) scale(0);
        opacity: 0;
    }
    100% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
}

.Card {
    color: rgba(46, 48, 49, 0.821);
    font-size: 1.4em; /* Adjusted font size */
    cursor: pointer;
    padding: 1em; /* Reduced padding */
    max-width: 20rem; /* Reduced max-width */
    -webkit-user-select: none;
    user-select: none;
    transform: scale(1);
    transition: transform 0.1s ease-in-out;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Reduced box shadow */
    border-radius: 8px; /* Reduced border radius */
    background: #ffffff26;
    animation: pop-in 0.5s ease-in-out forwards;
}

.Card.selected {
    transform: scale(1.2);
    transition: transform 0.3s ease, width 0.3s ease, height 0.3s ease;
}

.Card.selected .Card-Name {
    font-size: 1em; /* Make font size smaller */
}

.Data-Heading {
    font-size: 1.2rem;
}

time {
    white-space: nowrap;
}
.Data-Data {
    font-size: 1.3rem; /* Adjusted font size */
}

.Card-Data {
    opacity: 0;
    max-height: 0;
    padding: 1rem 2rem 0 2rem;
    overflow: hidden;
    transition: max-height 0.8s ease, opacity 0.8s ease; /* Add transition property */
}

.Card-Data.visible {
    opacity: 1;
    max-height: 1000px; /* Adjust the maximum height as per your requirement */
}

.Loading-Container {
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.Tip-Container {
    padding: 1rem;
}

.Spinning-Logo {
    margin: 3rem;
    width: 250px;
    height: 250px;
    animation: spin infinite 2s linear;
}

.No-Results {
    padding: 2rem;
}

.landing-container {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    min-height: 100vh;
}

.title {
    font-size: 3em;
    color: #333;
    margin-bottom: 1rem;
}
/* Add this CSS to your App.css or create a new CSS file */

/* Define the animation */
@keyframes fadeInBounce {
    0% {
        opacity: 0;
        transform: translateY(-100%);
    }
    20% {
        transform: translateY(0);
        opacity: 0.9;
    }
    40% {
        transform: translateY(-20%);
        opacity: 1;
    }
    60% {
        opacity: 1;
        transform: translateY(0);
    }
    80% {
        opacity: 1;
        transform: translateY(-2.5%);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}
/* Apply animation to each letter */
.AnimatedLetters span {
    display: inline-block;
    opacity: 0;
    animation: fadeInBounce 2s ease forwards;
}

/* Add animation delay to each letter */
.AnimatedLetters span:nth-child(1) {
    animation-delay: 0s; /* Adjust delay for the first letter */
}

.AnimatedLetters span:nth-child(2) {
    animation-delay: 0.1s; /* Adjust delay for the second letter */
}

/* Add more nth-child selectors for additional letters as needed */
.subtitle {
    font-size: 1.5em;
    color: #504f4f;
}

.sub-text {
    padding: 1rem;
}

.button {
    display: inline-block;
    font-size: 1em;
    color: #fff;
    background-color: #007bff;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.button:hover {
    background-color: #0056b3;
}

.features {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    width: 100%;
    max-width: 1200px;
    margin: 3rem;
}

.Button-Landing {
    text-decoration: none;
}

.feature {
    flex: 1 1 30%;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.133);
    margin: 0 1rem 2rem 1rem;
}

.featureTitle {
    font-size: 1.5em;
    color: #333;
}

.featureDescription {
    font-size: 1em;
    color: #4c4b4b;
}

.Footer-Sentry {
    margin-top: 3rem;
}

.footerText {
    font-size: 1.2rem;
    color: #414040;
}

.Source-Link {
    text-decoration: none;
    color: rgb(27, 26, 26);
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes slide-in {
    0% {
        transform: translateY(-100%) scale(0);
    }
    100% {
        transform: translateY(0) scale(1);
    }
}

@media only screen and (max-width: 1000px) {
    .landing-header,
    .features {
        margin-top: 2rem;
    }
}

@media only screen and (max-width: 1200px) {
    .Card-Holder {
        grid-template-columns: repeat(3, 1fr);
    }
    .Card {
        width: 100%;
        height: auto;
    }
}

@media only screen and (min-width: 1920px) {
    .Card-Holder {
        grid-template-columns: repeat(6, 1fr); /* Increase to 6 columns for large screens */
    }
    .Card {
        width: 25rem;
        height: 25rem;
    }
}

@media only screen and (min-width: 680px) and (max-width: 900px), only screen and (max-width: 680px) {
    .Card-Holder {
        display: flex;
        flex-wrap: wrap;
        grid-template-columns: 1fr;
    }
    .Card {
        width: 100%;
        height: auto;
    }
}

@media only screen and (min-width: 900px) and (max-width: 1200px) {
    .Card-Holder {
        gap: calc(0.8vw + 5rem);
        display: flex;
        flex-wrap: wrap;
    }
    .Card {
        padding: 2rem;
    }
}